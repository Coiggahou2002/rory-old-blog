{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"深圳人","uid":"60fb2254fd682498c39a67f2224cd21a","slug":"sz_poem","date":"2022-08-01T02:17:28.434Z","updated":"2022-08-01T02:19:25.983Z","comments":true,"path":"api/articles/sz_poem.json","keywords":null,"cover":null,"text":"深圳的地铁开到凌晨 可是还是有很多赶不上的人 这个城市好像从来不会停止转动 有人刚下班 有人刚上班 为了生活和梦想奔波 选择用勤奋弥补天分 不管是在拥挤的地铁里 还是在猪脚饭的餐桌上 搞钱都是永恒的话题 曾经的你为了什么来深圳 如今的深圳 是否也欠你一个梦想 深圳湾的海鸥偶尔会停...","link":"","photos":[],"count_time":{"symbolsCount":200,"symbolsTime":"1 mins."},"categories":[{"name":"随笔","slug":"随笔","count":2,"path":"api/categories/随笔.json"}],"tags":[{"name":"摘抄","slug":"摘抄","count":1,"path":"api/tags/摘抄.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"安装Ubuntu_20.04时踩过的坑","uid":"1bf57baa637442b73fb295466338f782","slug":"ubuntu_problems","date":"2022-08-01T01:16:28.151Z","updated":"2020-12-08T10:24:49.000Z","comments":true,"path":"api/articles/ubuntu_problems.json","keywords":null,"cover":"/img/ubuntu_problems/ubuntu.png","text":"Here are the various problems I met after successfully installing Ubuntu on my laptop. Cannot Install Language Support The system said that ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"5个月，我从一个完整项目学到了什么？","uid":"791254d594b7636005fb08a54038cd61","slug":"oj_proj","date":"2022-02-06T09:15:00.000Z","updated":"2022-08-01T02:26:43.386Z","comments":true,"path":"api/articles/oj_proj.json","keywords":null,"cover":[],"text":" 零、前言 好久没写文章了，今天这期文章，想跟各位计算机专业的新手伙伴们聊一个老生常见的话题。 为什么大家总说要通过做项目来学习？ 想想当初的我，也像各位小朋友一样，心里充满了问号： 大家说的“开发”、“做项目”到底是在干啥？ 我到底需要学哪些东西、怎么学、学到什么程度，才能做成...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"项目经验","slug":"项目经验","count":2,"path":"api/categories/项目经验.json"}],"tags":[{"name":"前端开发","slug":"前端开发","count":3,"path":"api/tags/前端开发.json"},{"name":"经验","slug":"经验","count":2,"path":"api/tags/经验.json"},{"name":"随笔","slug":"随笔","count":2,"path":"api/tags/随笔.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"npm cheat sheet","uid":"17c4a4a2974859ec97857b45c9cf78f2","slug":"npm_cheat_sheet","date":"2022-01-07T12:45:00.000Z","updated":"2022-08-01T02:35:06.896Z","comments":true,"path":"api/articles/npm_cheat_sheet.json","keywords":null,"cover":[],"text":"全局更新 npm：npm i npm -g 强制清理缓存(高版本禁用)：npm cache clean --force 安装 cnpm：npm install -g cnpm --registry=https://registry.npm.taobao.org 命令 版本 npm...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"前端开发","slug":"前端开发","count":1,"path":"api/categories/前端开发.json"}],"tags":[{"name":"前端开发","slug":"前端开发","count":3,"path":"api/tags/前端开发.json"},{"name":"npm","slug":"npm","count":1,"path":"api/tags/npm.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vue 的组件通信总结","uid":"9eb5ca10bff6be7f75941f8be934e3c2","slug":"vue_comp_commu","date":"2021-11-09T06:15:00.000Z","updated":"2022-08-01T02:30:48.113Z","comments":true,"path":"api/articles/vue_comp_commu.json","keywords":null,"cover":[],"text":" 常用方案 通过 props 传递 $emit 触发自定义事件 使用 $ref 使用事件总线 $parent 或 $root attrs 与 listeners provide 与 inject 通过 Vuex 具体场景 父传子 父组件通过给 props 给子组件传值. 通过一个...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"项目经验","slug":"项目经验","count":2,"path":"api/categories/项目经验.json"}],"tags":[{"name":"前端开发","slug":"前端开发","count":3,"path":"api/tags/前端开发.json"},{"name":"经验","slug":"经验","count":2,"path":"api/tags/经验.json"},{"name":"随笔","slug":"随笔","count":2,"path":"api/tags/随笔.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"刷题笔记 | 链表","uid":"6db5ceff1cffdec592e2386e6fd66245","slug":"linklist_solutions","date":"2021-03-31T13:19:00.000Z","updated":"2021-03-31T13:26:10.000Z","comments":true,"path":"api/articles/linklist_solutions.json","keywords":null,"cover":"/img/leetcode.png","text":"本文用于记录笔者刷链表类型题的笔记和题解. 力扣 206. 反转链表 https://leetcode-cn.com/problems/reverse-linked-list/ 三指针法 struct ListNode* reverseList(struct ListNode* ...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构实现 | 堆","uid":"492f874b3f1df40af4ebb1f2f51478f5","slug":"heap","date":"2021-03-29T08:26:00.000Z","updated":"2021-03-29T13:35:54.000Z","comments":true,"path":"api/articles/heap.json","keywords":null,"cover":"/img/data_structure.png","text":" 概述 堆是一棵完全二叉树，满足如下性质： 对于任意一个结点，其左、右子节点的值总是大于该节点的值（如果是最大堆则相反）. 一般用一维数组模拟堆，惯例下标从 1 开始，遵循此规范有如下结论： 若某节点索引为 iii，其左右儿子节点索引分别为 2i2i2i 与 (2i+1)(2i+...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":5,"path":"api/tags/数据结构.json"},{"name":"堆","slug":"堆","count":3,"path":"api/tags/堆.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构实现 | 双链表","uid":"787a127d9d6b0544e7ad2720504e8ca8","slug":"doubly_linklist_cpp","date":"2021-03-26T13:35:00.000Z","updated":"2021-03-31T13:04:15.000Z","comments":true,"path":"api/articles/doubly_linklist_cpp.json","keywords":null,"cover":"/img/data_structure.png","text":"本文给出用C语言实现双链表的代码。 基本结构 struct LNode &#123; int data; LNode* l; LNode* r; &#125;; typedef struct LNode LNode; typedef struct LNode * LinkList...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":5,"path":"api/tags/数据结构.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构实现 | 单链表","uid":"5eff4f497e442b4699b87d24ee757803","slug":"singly_linklist_cpp","date":"2021-03-20T14:25:00.000Z","updated":"2021-03-26T14:34:12.000Z","comments":true,"path":"api/articles/singly_linklist_cpp.json","keywords":null,"cover":"/img/data_structure.png","text":"本文给出用C语言实现单链表的代码。 基本结构（带头节点） struct LNode &#123; int data; LNode* next; &#125;; typedef struct LNode LNode; typedef struct LNode* LinkList; ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":5,"path":"api/tags/数据结构.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"基础算法 | 前缀和","uid":"52b22c68a76813c2ab065580311ca50e","slug":"prefix_sum","date":"2021-03-13T12:30:00.000Z","updated":"2022-08-01T01:53:18.571Z","comments":true,"path":"api/articles/prefix_sum.json","keywords":null,"cover":"/img/algorithm.png","text":"Description: 前缀和是处理区间查询的快速手段。 基本概念 一维前缀和 用数列观点理解就是前 nnn 项和，原序列是 ana_nan​，它的前缀和就是 Sn=∑i=1naiS_n=\\sum_{i=1}^{n} a_i Sn​=i=1∑n​ai​ 对于序列 {an}\\{a...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"前缀和","slug":"前缀和","count":1,"path":"api/tags/前缀和.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"《富爸爸穷爸爸》读书笔记","uid":"e445da7add089c24366d851e311436a7","slug":"rich_dad_poor_dad","date":"2020-12-17T16:00:00.000Z","updated":"2021-03-25T05:24:23.000Z","comments":true,"path":"api/articles/rich_dad_poor_dad.json","keywords":null,"cover":"/img/rich_dad_poor_dad/rich_dad_poor_dad.png","text":"Description: 一本改变底层财富思维的好书。 前置知识 收获 资产和负债 资产把钱放进你的口袋，负债将钱从你的口袋中取走。 富人用现金购置资产，再用资产产生的增值收入来消费。而穷人用现金购买负债，成为金钱的奴隶。 为什么应当把房子看作负债而非资产？ 把大部分钱都用在购置...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL 学习笔记","uid":"f474005b89a7d8e14b470713255edb89","slug":"mysql_note","date":"2020-12-03T03:24:00.000Z","updated":"2020-12-08T09:04:38.000Z","comments":true,"path":"api/articles/mysql_note.json","keywords":null,"cover":"/img/mysql.png","text":"本文记录笔者学习 MySQL 的过程和笔记 下载和安装 Community Server 免费 https://dev.mysql.com/downloads 术语 Term Description Remarks DB Database DBMS Database Manage...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据库","slug":"数据库","count":1,"path":"api/categories/数据库.json"}],"tags":[{"name":"数据库","slug":"数据库","count":1,"path":"api/tags/数据库.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java 学习日记","uid":"754f99333c5dda7ed7c4177b7a031b14","slug":"java_learning_log","date":"2020-11-27T16:00:00.000Z","updated":"2020-12-08T09:07:22.000Z","comments":true,"path":"api/articles/java_learning_log.json","keywords":null,"cover":null,"text":"记录 Java 学习之路的点点滴滴 2020/12/06 面向对象基础 6 多态性 父类的引用指向子类的对象 该对象的方法列表与父类相同 当该对象调用它的某个方法时，若该方法被子类重写过，则实际执行的是子类的方法 多态是方法的多态，与属性无关 2020/12/05 是的，今天太n...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Java","slug":"Java","count":1,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"日志","slug":"日志","count":1,"path":"api/tags/日志.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构 | 优先队列","uid":"badbb3e5dd9e6f65834da5c97268e39f","slug":"priority_queue","date":"2020-11-22T02:15:00.000Z","updated":"2020-12-08T10:14:24.000Z","comments":true,"path":"api/articles/priority_queue.json","keywords":null,"cover":"/img/data_structure.png","text":"本文介绍数据结构——优先队列 代码实现 前置辅助函数 private boolean less(int i, int j) &#123; return pq[i].compareTo(pq[j]) &lt; 0; &#125; private void exch (int i, ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":5,"path":"api/tags/数据结构.json"},{"name":"排序","slug":"排序","count":4,"path":"api/tags/排序.json"},{"name":"堆","slug":"堆","count":3,"path":"api/tags/堆.json"},{"name":"优先队列","slug":"优先队列","count":1,"path":"api/tags/优先队列.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"买卖股票的最佳时机 I","uid":"25a96685fe17a48f8d20d0ff79f5d30e","slug":"best_time_to_buy_and_sell_stock","date":"2020-11-21T06:28:00.000Z","updated":"2020-12-08T10:15:41.000Z","comments":true,"path":"api/articles/best_time_to_buy_and_sell_stock.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。 如果你最多只允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。 注意：你不能在买入股票前卖出股票。 示例 1: 输入: [7,1,5,3,6,4] 输出: 5 解释: 在...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"动态规划","slug":"动态规划","count":1,"path":"api/tags/动态规划.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"算法技巧 | 双指针","uid":"46ae5e42bd44ebce1177f4935501ecb2","slug":"double_cursor","date":"2020-11-20T07:31:00.000Z","updated":"2020-12-08T10:16:48.000Z","comments":true,"path":"api/articles/double_cursor.json","keywords":null,"cover":"/img/double_cursor.png","text":" 一、快慢指针 No.26 删除排序数组中的重复项 图解（搬运） 代码实现 class Solution &#123; public int removeDuplicates(int[] nums) &#123; if (nums.length == 0) return 0; i...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"双指针","slug":"双指针","count":4,"path":"api/tags/双指针.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构 | 链表","uid":"54c60bbbb328f6fecc301009ec40ba1d","slug":"linked_list","date":"2020-11-20T01:23:00.000Z","updated":"2020-12-08T10:22:44.000Z","comments":true,"path":"api/articles/linked_list.json","keywords":null,"cover":"/img/data_structure.png","text":"Description: 本文介绍链表的常见操作和题型。 基本操作 以下为下文中提到的链表定义 /*Definition for singly-linked list.*/ public class ListNode &#123; int val; ListNode next; ...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":5,"path":"api/tags/数据结构.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 26 删除排序数组中的重复项","uid":"73e8a6d436c7d2e8181ea6bdbf6ed786","slug":"remove_duplicates_in_sorted_array","date":"2020-11-20T00:15:00.000Z","updated":"2020-12-08T10:24:21.000Z","comments":true,"path":"api/articles/remove_duplicates_in_sorted_array.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。 不要使用额外的数组空间，你必须在原地修改输入数组并在使用O(1)额外空间的条件下完成。 示例 1: 给定数组 nums = [1,1,2], 函数应该返回新的长度 2, 并...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"双指针","slug":"双指针","count":4,"path":"api/tags/双指针.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"算法 | 二分查找","uid":"49d9ab5fe10d0180f622045a55f67fdd","slug":"binary_search","date":"2020-11-19T12:34:00.000Z","updated":"2020-12-08T10:26:28.000Z","comments":true,"path":"api/articles/binary_search.json","keywords":null,"cover":"/img/algorithm.png","text":"本文整理 LeetCode 上二分查找的相关题型。 基本知识 时间复杂度：O(logn)O(logn)O(logn) 空间复杂度：O(1)O(1)O(1) 递归实现 public static int rank(int key, int[] a, int lo, int hi) ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 378 有效的完全平方数","uid":"a3ba6c10f076994138a9054fc0850b9a","slug":"valid_perfect_square","date":"2020-11-19T06:53:00.000Z","updated":"2020-12-08T10:24:59.000Z","comments":true,"path":"api/articles/valid_perfect_square.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个正整数 num ，编写一个函数，如果 num 是一个完全平方数，则返回 True ，否则返回 False 。 说明：不要使用任何内置的库函数，如 sqrt 。 示例 1： 输入：16 输出：True 示例 2： 输入：14 输出：False 来源：力扣（LeetC...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"搞设计必备的工具/资源/网站","uid":"7b9ffc72b5a7cb190c30b47bbc422642","slug":"design_tools","date":"2020-11-06T16:00:00.000Z","updated":"2021-03-25T05:29:23.000Z","comments":true,"path":"api/articles/design_tools.json","keywords":null,"cover":"/img/design_tools/index_banner.png","text":"给看官们推荐一下笔者常用的设计资源和网站 Dribbble—灵感之源 Dribbble 是全球最大的在线设计交流网站，来自世界各地的顶尖设计师经常在该站上发布自己的作品。 笔者平时会经常上去观摩大师的设计，获取配色灵感，提高审美标准，同时get到设计界的最新潮流。 笔者坚信，多欣...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"设计","slug":"设计","count":1,"path":"api/categories/设计.json"}],"tags":[{"name":"工具","slug":"工具","count":4,"path":"api/tags/工具.json"},{"name":"设计","slug":"设计","count":1,"path":"api/tags/设计.json"},{"name":"PPT","slug":"PPT","count":1,"path":"api/tags/PPT.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"科学上网教程","uid":"046faba7a426676dc1392c6c7d530460","slug":"scientific_web","date":"2020-11-05T11:30:00.000Z","updated":"2021-03-25T05:28:19.000Z","comments":true,"path":"api/articles/scientific_web.json","keywords":null,"cover":"/img/scientific_web/index_img.png","text":"备注：我只是推荐一个个人认为价格便宜、稳定性和速度兼具、不需要复杂配置的梯子，没有任何商业挂钩行为，如果大家有更好梯子，欢迎推荐 一、注册账号 1.访问https://www.yahaha.co/ 2.注册账号并登录 **备注：**邀请码不用填，分子式一般按 CHONS 的顺序，...","link":"","photos":[],"count_time":{"symbolsCount":494,"symbolsTime":"1 mins."},"categories":[{"name":"工具","slug":"工具","count":1,"path":"api/categories/工具.json"}],"tags":[{"name":"工具","slug":"工具","count":4,"path":"api/tags/工具.json"},{"name":"技巧","slug":"技巧","count":1,"path":"api/tags/技巧.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 771 宝石与石头","uid":"bfed4d6aac2d701f6b1f0bbff9221463","slug":"diamond_and_stone","date":"2020-11-04T16:00:00.000Z","updated":"2020-12-08T10:28:35.000Z","comments":true,"path":"api/articles/diamond_and_stone.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定字符串 J 代表石头中宝石的类型，和字符串 S 代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。 J 中的字母不重复，J 和 S 中的所有字符都是字母。字母区分大小写，因此 &quot;a&quot; 和 &quot...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"哈希表","slug":"哈希表","count":3,"path":"api/tags/哈希表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Python脚本实现自动登录校园网","uid":"e88270f658837dea31f745921ef2fb60","slug":"hit_lan_auto_login","date":"2020-11-04T15:39:00.000Z","updated":"2020-12-08T10:32:40.000Z","comments":true,"path":"api/articles/hit_lan_auto_login.json","keywords":null,"cover":"/img/python_auto_login/pylogin.png","text":" 准备工作 1.下载chromedriver 如果没有安装Chrome浏览器，请先安装。 打开Chrome -&gt; 帮助 -&gt; 关于 ，查看Chrome版本号。 Tips：版本号是类似于 86.0.4240.183 这样的一串数字 下载与上述版本号相同版本的 chrom...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"项目","slug":"项目","count":1,"path":"api/categories/项目.json"}],"tags":[{"name":"工具","slug":"工具","count":4,"path":"api/tags/工具.json"},{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"脚本","slug":"脚本","count":1,"path":"api/tags/脚本.json"},{"name":"项目","slug":"项目","count":1,"path":"api/tags/项目.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"VSCode配置Python环境","uid":"0ab63aeb665f5c401d814f05425f0b13","slug":"python_for_vscode","date":"2020-11-04T14:00:00.000Z","updated":"2020-12-08T10:24:16.000Z","comments":true,"path":"api/articles/python_for_vscode.json","keywords":null,"cover":"/img/python_vscode/pyvs.png","text":"本文介绍 VS Code 上配置 Python 环境的方法。 主要步骤 安装Python 到官网下载最新版Python并安装。 最后一步请点击 Disable path length limit。 安装完成后可到终端验证，输入 python --version 出现“用户取消了安...","link":"","photos":[],"count_time":{"symbolsCount":638,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"环境配置","slug":"环境配置","count":2,"path":"api/tags/环境配置.json"},{"name":"VSCode","slug":"VSCode","count":2,"path":"api/tags/VSCode.json"},{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 941 有效的山脉数组","uid":"60b0137d332652961f2e3aab7916571c","slug":"valid_mountain_array","date":"2020-11-03T15:00:00.000Z","updated":"2020-12-08T10:29:49.000Z","comments":true,"path":"api/articles/valid_mountain_array.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。 让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组： A.length &gt;= 3 在 0 &lt; i &lt; A.length - 1 条件下，存在 i 使得： A[...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"数组","slug":"数组","count":3,"path":"api/tags/数组.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 217 存在重复元素","uid":"3076ed3c59a77dfacbad03456d33f93c","slug":"contains_duplicate","date":"2020-11-03T13:00:00.000Z","updated":"2020-12-08T10:28:16.000Z","comments":true,"path":"api/articles/contains_duplicate.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个整数数组，判断是否存在重复元素。 如果任意一值在数组中出现至少两次，函数返回 true 如果数组中每个元素都不相同，则返回 false 示例 1: 输入: [1,2,3,1] 输出: true 示例 2: 输入: [1,2,3,4] 输出: false 示例 3:...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"},{"name":"哈希表","slug":"哈希表","count":3,"path":"api/tags/哈希表.json"},{"name":"双指针","slug":"双指针","count":4,"path":"api/tags/双指针.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 387 第一个唯一字符","uid":"ca28cca6d1e63b8c011c6f8240779c16","slug":"first_unique_character_in_string","date":"2020-11-03T08:30:00.000Z","updated":"2020-12-08T10:30:14.000Z","comments":true,"path":"api/articles/first_unique_character_in_string.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1。 示例： s = \"leetcode\" 返回 0 s = \"loveleetcode\" 返回 2 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/p...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"},{"name":"哈希表","slug":"哈希表","count":3,"path":"api/tags/哈希表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 344 反转字符串","uid":"781f960ea9b66678a41daf934b2a2a29","slug":"reverse_string","date":"2020-11-03T05:00:00.000Z","updated":"2020-12-08T10:29:30.000Z","comments":true,"path":"api/articles/reverse_string.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。 不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。 你可以假设数组中的所有字符都是 ASCII 码表中的可打印字符。 示例 1： ...","link":"","photos":[],"count_time":{"symbolsCount":686,"symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"},{"name":"双指针","slug":"双指针","count":4,"path":"api/tags/双指针.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 14 最长公共前缀","uid":"d86afd4df1294e5c09b8411c6186d560","slug":"longest_common_prefix","date":"2020-11-01T16:00:00.000Z","updated":"2020-12-08T10:29:07.000Z","comments":true,"path":"api/articles/longest_common_prefix.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 编写一个函数来查找字符串数组中的最长公共前缀。 如果不存在公共前缀，返回空字符串 &quot;&quot; 。 示例 1: 输入: [\"flower\",\"flow\",\"flight\"] 输出: \"fl\" 示例 2: 输入: [\"dog\",\"racecar\",\"car\"] ...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 434 字符串中的单词个数","uid":"b513457641c5d77aabc90d59ad7c2b99","slug":"num_of_segments_in_string","date":"2020-11-01T16:00:00.000Z","updated":"2020-12-08T10:29:16.000Z","comments":true,"path":"api/articles/num_of_segments_in_string.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 You are given a string s , return the number of segments in the string. A segment is defined to be a contiguous sequence of non-space ch...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 520 检测大写字母","uid":"a9678d67ca5c601b58ad6876d5f2a753","slug":"check_capital_letter","date":"2020-10-31T16:00:00.000Z","updated":"2020-12-08T10:27:59.000Z","comments":true,"path":"api/articles/check_capital_letter.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个单词，你需要判断单词的大写使用是否正确。 我们定义，在以下情况时，单词的大写用法是正确的： 全部字母都是大写，比如&quot;USA&quot;。 单词中所有字母都不是大写，比如&quot;leetcode&quot;。 如果单词不只含有一个字母，只有首字母大写，...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 125 验证回文串","uid":"1905b17da4d915d445f9b18f99561b69","slug":"is_palindrome","date":"2020-10-31T16:00:00.000Z","updated":"2020-12-08T10:28:57.000Z","comments":true,"path":"api/articles/is_palindrome.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。 说明：本题中，我们将空字符串定义为有效的回文串。 示例 1: 输入: \"A man, a plan, a canal: Panama\" 输出: true 示例 2: 输入: \"race a ...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"归纳总结 | 指针","uid":"65abd3d32b27895ac3ec803fdc1b4589","slug":"pivot_and_array","date":"2020-10-30T16:00:00.000Z","updated":"2020-12-08T10:23:41.000Z","comments":true,"path":"api/articles/pivot_and_array.json","keywords":null,"cover":null,"text":"本文介绍 C 语言中的指针和数组相关知识。 基础知识 变量 一个变量具有三项属性： 属性 解释 数据类型 (Element Type) 如 int ，char 地址 (Memory Address) 对于64位计算机来讲，一条内存地址值占8个字节 值 (Value) 变量的“内容...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"C/C++","slug":"C-C","count":2,"path":"api/categories/C-C.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":2,"path":"api/tags/C-C.json"},{"name":"指针","slug":"指针","count":1,"path":"api/tags/指针.json"},{"name":"笔记总结","slug":"笔记总结","count":1,"path":"api/tags/笔记总结.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Hexo + Gitee 部署个人博客","uid":"f4e7ecf8b446abc26f94ba3ad7edad20","slug":"hexo_plus_gitee","date":"2020-10-27T02:53:36.000Z","updated":"2021-03-25T13:08:18.000Z","comments":true,"path":"api/articles/hexo_plus_gitee.json","keywords":null,"cover":"/img/hexo_plus_gitee/hexo_plus_gitee.png","text":"最近在尝试搭建个人博客，本来刚安装好WordPress，突然觉得这种动态的CMS有点过于臃肿，用来作个人博客的管理平台有点杀鸡用牛刀的意思. 后来在B站看了CodeSheep的介绍视频，决定尝试VuePress，但搭建好后又发现过于“静态”，缺少给文章打tag , categor...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":2,"path":"api/tags/前端.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"梦想的起点 | 深圳","uid":"ec0439b9fef997560e6463dca51af921","slug":"thought_at_szb","date":"2020-10-26T16:00:00.000Z","updated":"2021-03-25T05:29:00.000Z","comments":true,"path":"api/articles/thought_at_szb.json","keywords":null,"cover":"/img/thought_at_szb/szb_blue.png","text":"谨以此文，开启深圳追梦之旅 题记 2018年冬，深圳北站。 孤身一人来到陌生的城市，少年抬起头，看着一抹暖阳洒在“深圳北”的站牌上，稚嫩的脸庞上，写满了懵懂、好奇、憧憬与希望。 2020年9月，深圳南山西丽大学城。 经过3年的磨炼，略显成熟的少年，在他青涩的18岁，紧握着手里的通...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"随笔","slug":"随笔","count":2,"path":"api/categories/随笔.json"}],"tags":[],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Anki×生物-记忆方法和经验分享","uid":"8ccb240acaf1eee2e5457b7879df4395","slug":"Anki_Biology","date":"2020-10-26T06:53:36.000Z","updated":"2020-12-08T10:26:33.000Z","comments":true,"path":"api/articles/Anki_Biology.json","keywords":null,"cover":"/img/anki_banner2.png","text":" 主题概览 Anki的简要介绍 我是如何了解到Anki的 高三后期Anki的使用体验及效果 Anki给我带来的思考和启发 前言 说来惭愧。 笔者本来计划高考后的暑假集中精力写一系列文章来分享高考的应试经验和收获，当作是将自己三年的一些经验进行简单的总结和输出，能够分享出来供大家参...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"高考","slug":"高考","count":1,"path":"api/categories/高考.json"}],"tags":[{"name":"高考","slug":"高考","count":1,"path":"api/tags/高考.json"},{"name":"生物","slug":"生物","count":1,"path":"api/tags/生物.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"VuePress部署轻量级个人博客","uid":"3b3adefb31727270472d3ca610693d83","slug":"vuepress_configurating","date":"2020-10-23T16:00:00.000Z","updated":"2020-12-08T10:25:16.000Z","comments":true,"path":"api/articles/vuepress_configurating.json","keywords":null,"cover":"/img/vuepress_build/vuepress.png","text":"本文介绍笔者折腾 VuePress 的过程。 1. 安装node.js 到官网下载稳定版安装即可 2. 按照官网指示进行基本安装配置 创建目录 包管理器初始化（yarn, npm二选一） 安装vuepress为本地依赖 创建docs目录，并在下面手动创建README.md pac...","link":"","photos":[],"count_time":{"symbolsCount":996,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":2,"path":"api/tags/前端.json"},{"name":"博客","slug":"博客","count":1,"path":"api/tags/博客.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 724 寻找数组中心索引","uid":"87fe1dbbd2e32cc15a0b1461130095f4","slug":"find_middle_index","date":"2020-10-19T16:00:00.000Z","updated":"2020-12-08T10:31:18.000Z","comments":true,"path":"api/articles/find_middle_index.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个整数类型的数组 nums，请编写一个能够返回数组 “中心索引” 的方法。 我们是这样定义数组 中心索引 的：数组中心索引的左侧所有元素相加的和等于右侧所有元素相加的和。 如果数组不存在中心索引，那么我们应该返回 -1。如果数组有多个中心索引，那么我们应该返回最靠近...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"数组","slug":"数组","count":3,"path":"api/tags/数组.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Win命令行常用语句","uid":"cc5694c524a85a8db61dce85d10a8751","slug":"win_powershell_commands","date":"2020-10-19T16:00:00.000Z","updated":"2020-12-08T10:25:25.000Z","comments":true,"path":"api/articles/win_powershell_commands.json","keywords":null,"cover":"/img/powershell.png","text":" 操作文件和目录 切换到某个目录，用具体路径代替[directory_name] cd [directory_name] 在当前操作目录下新建文件夹 mkdir [new_folder_name] 用Visual Studio Code打开当前文件夹作为工作区 code . 在命...","link":"","photos":[],"count_time":{"symbolsCount":454,"symbolsTime":"1 mins."},"categories":[{"name":"Windows","slug":"Windows","count":1,"path":"api/categories/Windows.json"}],"tags":[{"name":"命令行","slug":"命令行","count":1,"path":"api/tags/命令行.json"},{"name":"Windows","slug":"Windows","count":1,"path":"api/tags/Windows.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 73 矩阵置零","uid":"bf14c276bb885a007bbd4fa6c728a7f6","slug":"zero_matrix","date":"2020-10-19T16:00:00.000Z","updated":"2020-12-08T10:29:58.000Z","comments":true,"path":"api/articles/zero_matrix.json","keywords":null,"cover":"/img/leetcode.png","text":" 题目 给定一个 m x n 的矩阵，如果一个元素为 0，则将其所在行和列的所有元素都设为 0。请使用原地算法。 示例 1: 输入: [ [1,1,1], [1,0,1], [1,1,1] ] 输出: [ [1,0,1], [0,0,0], [1,0,1] ] 示例 2: 输入:...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"数组","slug":"数组","count":3,"path":"api/tags/数组.json"},{"name":"矩阵","slug":"矩阵","count":1,"path":"api/tags/矩阵.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"VSCode C/C++环境配置傻瓜教程","uid":"cd323795eed6bc4ed4af1d469745b308","slug":"cpp_vscode","date":"2020-10-15T15:00:00.000Z","updated":"2021-03-25T05:27:57.000Z","comments":true,"path":"api/articles/cpp_vscode.json","keywords":null,"cover":"/img/cpp_vscode/banner.png","text":"介绍VSCode C/C++环境配置过程 一、官网下载VS Code并安装 你想装在哪个盘都没问题 Visual Studio Code 64bit for Windows 官网下载地址 https://code.visualstudio.com 二、下载MinGW编译器 进行这...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"C/C++","slug":"C-C","count":2,"path":"api/categories/C-C.json"}],"tags":[{"name":"工具","slug":"工具","count":4,"path":"api/tags/工具.json"},{"name":"C/C++","slug":"C-C","count":2,"path":"api/tags/C-C.json"},{"name":"环境配置","slug":"环境配置","count":2,"path":"api/tags/环境配置.json"},{"name":"VSCode","slug":"VSCode","count":2,"path":"api/tags/VSCode.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"[Demo] 堆排序","uid":"91488b0487c2b26df0c04913aab99fd6","slug":"demo_heapsort","date":"2020-10-03T16:00:00.000Z","updated":"2020-12-08T02:29:49.000Z","comments":true,"path":"api/articles/demo_heapsort.json","keywords":null,"cover":"/img/algorithm.png","text":"#include &lt;stdio.h> void SwapInArray(int arr[], int x, int y) &#123; /*Function：将数组中两个元素的值进行交换*/ int tmp; tmp = arr[x]; arr[x] = arr[y]; a...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"排序","slug":"排序","count":4,"path":"api/tags/排序.json"},{"name":"堆","slug":"堆","count":3,"path":"api/tags/堆.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"[Demo] 归并排序","uid":"1abc49c5902eda16bbaa0acd742568ec","slug":"demo_mergesort","date":"2020-10-02T16:00:00.000Z","updated":"2020-12-18T09:20:20.000Z","comments":true,"path":"api/articles/demo_mergesort.json","keywords":null,"cover":"/img/algorithm.png","text":"#include &lt;stdio.h> #include &lt;stdlib.h> void Merge (int arr[], int L, int M, int R) &#123; /*此处数组的头指针和尾指针需要参数给出，便于获取数组长度*/ int LEFT_SIZ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"排序","slug":"排序","count":4,"path":"api/tags/排序.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"[Demo] 快速排序","uid":"cdcaa64e46db961619b177c66af1aa77","slug":"demo_quicksort","date":"2020-09-26T08:22:00.000Z","updated":"2020-12-08T02:16:08.000Z","comments":true,"path":"api/articles/demo_quicksort.json","keywords":null,"cover":"/img/algorithm.png","text":"#include &lt;stdio.h> //对要操作的变量采用全局定义，可以避免指针的操作 int a[101],n; int times = 0; void quickSort(int left, int right) &#123; //left,right分别为左右指针 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"排序","slug":"排序","count":4,"path":"api/tags/排序.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":14,"tags":113,"word_count":"127k","post_count":45}