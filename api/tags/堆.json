{"name":"堆","slug":"堆","count":3,"postlist":[{"title":"[Demo] 堆排序","uid":"91488b0487c2b26df0c04913aab99fd6","slug":"demo_heapsort","date":"2020-10-03T16:00:00.000Z","updated":"2020-12-08T02:29:49.000Z","comments":true,"path":"api/articles/demo_heapsort.json","keywords":null,"cover":"/img/algorithm.png","text":"#include &lt;stdio.h> void SwapInArray(int arr[], int x, int y) &#123; /*Function：将数组中两个元素的值进行交换*/ int tmp; tmp = arr[x]; arr[x] = arr[y]; a...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"排序","slug":"排序","count":4,"path":"api/tags/排序.json"},{"name":"堆","slug":"堆","count":3,"path":"api/tags/堆.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构实现 | 堆","uid":"492f874b3f1df40af4ebb1f2f51478f5","slug":"heap","date":"2021-03-29T08:26:00.000Z","updated":"2021-03-29T13:35:54.000Z","comments":true,"path":"api/articles/heap.json","keywords":null,"cover":"/img/data_structure.png","text":" 概述 堆是一棵完全二叉树，满足如下性质： 对于任意一个结点，其左、右子节点的值总是大于该节点的值（如果是最大堆则相反）. 一般用一维数组模拟堆，惯例下标从 1 开始，遵循此规范有如下结论： 若某节点索引为 iii，其左右儿子节点索引分别为 2i2i2i 与 (2i+1)(2i+...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":6,"path":"api/tags/数据结构.json"},{"name":"堆","slug":"堆","count":3,"path":"api/tags/堆.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构 | 优先队列","uid":"badbb3e5dd9e6f65834da5c97268e39f","slug":"priority_queue","date":"2020-11-22T02:15:00.000Z","updated":"2020-12-08T10:14:24.000Z","comments":true,"path":"api/articles/priority_queue.json","keywords":null,"cover":"/img/data_structure.png","text":"本文介绍数据结构——优先队列 代码实现 前置辅助函数 private boolean less(int i, int j) &#123; return pq[i].compareTo(pq[j]) &lt; 0; &#125; private void exch (int i, ...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":6,"path":"api/tags/数据结构.json"},{"name":"排序","slug":"排序","count":4,"path":"api/tags/排序.json"},{"name":"堆","slug":"堆","count":3,"path":"api/tags/堆.json"},{"name":"优先队列","slug":"优先队列","count":1,"path":"api/tags/优先队列.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}