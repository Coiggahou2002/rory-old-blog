{"total":48,"pageSize":13,"pageCount":4,"data":[{"title":"数据结构实现 | ArrayList","uid":"015686a9342f613e50a022726c366bc4","slug":"arraylist_implement","date":"2022-08-10T18:56:00.000Z","updated":"2022-08-10T18:57:09.716Z","comments":true,"path":"api/articles/arraylist_implement.json","cover":null,"text":" 代码实现 import java.util.Arrays; /** * 自扩容变长数组 (线程不安全) * @author Coiggahou2002 */ public class JArrayList&lt;T extends Object> &#123; /** * 暴露...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":1,"path":"api/categories/数据结构.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":6,"path":"api/tags/数据结构.json"},{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"造轮子","slug":"造轮子","count":1,"path":"api/tags/造轮子.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MIT 6.S081 Lab Util","uid":"7702ed0cfb3e150d7bb641d82353e817","slug":"MIT_6.S081_Lab_Util","date":"2022-08-04T14:33:00.000Z","updated":"2022-08-04T14:59:26.941Z","comments":true,"path":"api/articles/MIT_6.S081_Lab_Util.json","cover":null,"text":"以此文记录一下做 MIT 6.S081 操作系统实验的过程 本文记录第一个实验——Lab Util 这个实验有几个部分： Boot xv6 教你怎么使用打分程序 sleep pingpong primes find xargs Boot xv6 这部分没什么好说的，我是在 WSL...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":1,"path":"api/categories/操作系统.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":1,"path":"api/tags/操作系统.json"},{"name":"Lab","slug":"Lab","count":1,"path":"api/tags/Lab.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"暑假打卡日记","uid":"10b665f1e095b4ed3cf881e243904938","slug":"summer_go_up","date":"2022-08-01T15:39:00.000Z","updated":"2022-08-10T00:10:48.134Z","comments":true,"path":"api/articles/summer_go_up.json","cover":null,"text":" 暑假打卡 08/09 力扣每日一题（1413. 逐步求和得到正数的最小值，数组遍历） 游泳 08/08 肩颈肌肉保养 回家 K3 核心训练 08/07 K2 胸肌训练 收拾行李 08/06 力扣每日一题（1408. 数组中的字符串匹配，简单暴力对比） 08/05 力扣每日一题（...","link":"","photos":[],"count_time":{"symbolsCount":930,"symbolsTime":"1 mins."},"categories":[{"name":"成长","slug":"成长","count":1,"path":"api/categories/成长.json"}],"tags":[{"name":"健身","slug":"健身","count":1,"path":"api/tags/健身.json"},{"name":"力扣","slug":"力扣","count":1,"path":"api/tags/力扣.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"深圳人","uid":"60fb2254fd682498c39a67f2224cd21a","slug":"sz_poem","date":"2022-08-01T02:17:28.434Z","updated":"2022-08-01T12:37:35.575Z","comments":true,"path":"api/articles/sz_poem.json","cover":"https://cjpark-1304138896.cos.ap-guangzhou.myqcloud.com/note_img/IMG_20211221_215650.jpg","text":"深圳的地铁开到凌晨 可是还是有很多赶不上的人 这个城市好像从来不会停止转动 有人刚下班 有人刚上班 为了生活和梦想奔波 选择用勤奋弥补天分 不管是在拥挤的地铁里 还是在猪脚饭的餐桌上 搞钱都是永恒的话题 曾经的你为了什么来深圳 如今的深圳 是否也欠你一个梦想 深圳湾的海鸥偶尔会停...","link":"","photos":[],"count_time":{"symbolsCount":201,"symbolsTime":"1 mins."},"categories":[{"name":"随笔","slug":"随笔","count":2,"path":"api/categories/随笔.json"}],"tags":[{"name":"摘抄","slug":"摘抄","count":1,"path":"api/tags/摘抄.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"安装Ubuntu_20.04时踩过的坑","uid":"1bf57baa637442b73fb295466338f782","slug":"ubuntu_problems","date":"2022-08-01T01:16:28.151Z","updated":"2020-12-08T10:24:49.000Z","comments":true,"path":"api/articles/ubuntu_problems.json","cover":"/img/ubuntu_problems/ubuntu.png","text":"Here are the various problems I met after successfully installing Ubuntu on my laptop. Cannot Install Language Support The system said that ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"5个月，我从一个完整项目学到了什么？","uid":"791254d594b7636005fb08a54038cd61","slug":"oj_proj","date":"2022-02-06T09:15:00.000Z","updated":"2022-08-01T02:26:43.386Z","comments":true,"path":"api/articles/oj_proj.json","cover":[],"text":" 零、前言 好久没写文章了，今天这期文章，想跟各位计算机专业的新手伙伴们聊一个老生常见的话题。 为什么大家总说要通过做项目来学习？ 想想当初的我，也像各位小朋友一样，心里充满了问号： 大家说的“开发”、“做项目”到底是在干啥？ 我到底需要学哪些东西、怎么学、学到什么程度，才能做成...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"项目经验","slug":"项目经验","count":2,"path":"api/categories/项目经验.json"}],"tags":[{"name":"前端开发","slug":"前端开发","count":3,"path":"api/tags/前端开发.json"},{"name":"经验","slug":"经验","count":2,"path":"api/tags/经验.json"},{"name":"随笔","slug":"随笔","count":2,"path":"api/tags/随笔.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"npm cheat sheet","uid":"17c4a4a2974859ec97857b45c9cf78f2","slug":"npm_cheat_sheet","date":"2022-01-07T12:45:00.000Z","updated":"2022-08-01T02:35:06.896Z","comments":true,"path":"api/articles/npm_cheat_sheet.json","cover":[],"text":"全局更新 npm：npm i npm -g 强制清理缓存(高版本禁用)：npm cache clean --force 安装 cnpm：npm install -g cnpm --registry=https://registry.npm.taobao.org 命令 版本 npm...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"前端开发","slug":"前端开发","count":1,"path":"api/categories/前端开发.json"}],"tags":[{"name":"前端开发","slug":"前端开发","count":3,"path":"api/tags/前端开发.json"},{"name":"npm","slug":"npm","count":1,"path":"api/tags/npm.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vue 的组件通信总结","uid":"9eb5ca10bff6be7f75941f8be934e3c2","slug":"vue_comp_commu","date":"2021-11-09T06:15:00.000Z","updated":"2022-08-01T02:30:48.113Z","comments":true,"path":"api/articles/vue_comp_commu.json","cover":[],"text":" 常用方案 通过 props 传递 $emit 触发自定义事件 使用 $ref 使用事件总线 $parent 或 $root attrs 与 listeners provide 与 inject 通过 Vuex 具体场景 父传子 父组件通过给 props 给子组件传值. 通过一个...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"项目经验","slug":"项目经验","count":2,"path":"api/categories/项目经验.json"}],"tags":[{"name":"前端开发","slug":"前端开发","count":3,"path":"api/tags/前端开发.json"},{"name":"经验","slug":"经验","count":2,"path":"api/tags/经验.json"},{"name":"随笔","slug":"随笔","count":2,"path":"api/tags/随笔.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"刷题笔记 | 链表","uid":"6db5ceff1cffdec592e2386e6fd66245","slug":"linklist_solutions","date":"2021-03-31T13:19:00.000Z","updated":"2021-03-31T13:26:10.000Z","comments":true,"path":"api/articles/linklist_solutions.json","cover":"/img/leetcode.png","text":"本文用于记录笔者刷链表类型题的笔记和题解. 力扣 206. 反转链表 https://leetcode-cn.com/problems/reverse-linked-list/ 三指针法 struct ListNode* reverseList(struct ListNode* ...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构实现 | 堆","uid":"492f874b3f1df40af4ebb1f2f51478f5","slug":"heap","date":"2021-03-29T08:26:00.000Z","updated":"2021-03-29T13:35:54.000Z","comments":true,"path":"api/articles/heap.json","cover":"/img/data_structure.png","text":" 概述 堆是一棵完全二叉树，满足如下性质： 对于任意一个结点，其左、右子节点的值总是大于该节点的值（如果是最大堆则相反）. 一般用一维数组模拟堆，惯例下标从 1 开始，遵循此规范有如下结论： 若某节点索引为 iii，其左右儿子节点索引分别为 2i2i2i 与 (2i+1)(2i+...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":6,"path":"api/tags/数据结构.json"},{"name":"堆","slug":"堆","count":3,"path":"api/tags/堆.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构实现 | 双链表","uid":"787a127d9d6b0544e7ad2720504e8ca8","slug":"doubly_linklist_cpp","date":"2021-03-26T13:35:00.000Z","updated":"2021-03-31T13:04:15.000Z","comments":true,"path":"api/articles/doubly_linklist_cpp.json","cover":"/img/data_structure.png","text":"本文给出用C语言实现双链表的代码。 基本结构 struct LNode &#123; int data; LNode* l; LNode* r; &#125;; typedef struct LNode LNode; typedef struct LNode * LinkList...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":6,"path":"api/tags/数据结构.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构实现 | 单链表","uid":"5eff4f497e442b4699b87d24ee757803","slug":"singly_linklist_cpp","date":"2021-03-20T14:25:00.000Z","updated":"2021-03-26T14:34:12.000Z","comments":true,"path":"api/articles/singly_linklist_cpp.json","cover":"/img/data_structure.png","text":"本文给出用C语言实现单链表的代码。 基本结构（带头节点） struct LNode &#123; int data; LNode* next; &#125;; typedef struct LNode LNode; typedef struct LNode* LinkList; ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":6,"path":"api/tags/数据结构.json"},{"name":"链表","slug":"链表","count":4,"path":"api/tags/链表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"基础算法 | 前缀和","uid":"52b22c68a76813c2ab065580311ca50e","slug":"prefix_sum","date":"2021-03-13T12:30:00.000Z","updated":"2022-08-01T01:53:18.571Z","comments":true,"path":"api/articles/prefix_sum.json","cover":"/img/algorithm.png","text":"Description: 前缀和是处理区间查询的快速手段。 基本概念 一维前缀和 用数列观点理解就是前 nnn 项和，原序列是 ana_nan​，它的前缀和就是 Sn=∑i=1naiS_n=\\sum_{i=1}^{n} a_i Sn​=i=1∑n​ai​ 对于序列 {an}\\{a...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"前缀和","slug":"前缀和","count":1,"path":"api/tags/前缀和.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}