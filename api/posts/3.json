{"total":47,"pageSize":13,"pageCount":4,"data":[{"title":"VSCode配置Python环境","uid":"0ab63aeb665f5c401d814f05425f0b13","slug":"python_for_vscode","date":"2020-11-04T14:00:00.000Z","updated":"2020-12-08T10:24:16.000Z","comments":true,"path":"api/articles/python_for_vscode.json","cover":"/img/python_vscode/pyvs.png","text":"本文介绍 VS Code 上配置 Python 环境的方法。 主要步骤 安装Python 到官网下载最新版Python并安装。 最后一步请点击 Disable path length limit。 安装完成后可到终端验证，输入 python --version 出现“用户取消了安...","link":"","photos":[],"count_time":{"symbolsCount":638,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"环境配置","slug":"环境配置","count":2,"path":"api/tags/环境配置.json"},{"name":"VSCode","slug":"VSCode","count":2,"path":"api/tags/VSCode.json"},{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 941 有效的山脉数组","uid":"60b0137d332652961f2e3aab7916571c","slug":"valid_mountain_array","date":"2020-11-03T15:00:00.000Z","updated":"2020-12-08T10:29:49.000Z","comments":true,"path":"api/articles/valid_mountain_array.json","cover":"/img/leetcode.png","text":" 题目 给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。 让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组： A.length &gt;= 3 在 0 &lt; i &lt; A.length - 1 条件下，存在 i 使得： A[...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"数组","slug":"数组","count":3,"path":"api/tags/数组.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 217 存在重复元素","uid":"3076ed3c59a77dfacbad03456d33f93c","slug":"contains_duplicate","date":"2020-11-03T13:00:00.000Z","updated":"2020-12-08T10:28:16.000Z","comments":true,"path":"api/articles/contains_duplicate.json","cover":"/img/leetcode.png","text":" 题目 给定一个整数数组，判断是否存在重复元素。 如果任意一值在数组中出现至少两次，函数返回 true 如果数组中每个元素都不相同，则返回 false 示例 1: 输入: [1,2,3,1] 输出: true 示例 2: 输入: [1,2,3,4] 输出: false 示例 3:...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"},{"name":"哈希表","slug":"哈希表","count":3,"path":"api/tags/哈希表.json"},{"name":"双指针","slug":"双指针","count":4,"path":"api/tags/双指针.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 387 第一个唯一字符","uid":"ca28cca6d1e63b8c011c6f8240779c16","slug":"first_unique_character_in_string","date":"2020-11-03T08:30:00.000Z","updated":"2020-12-08T10:30:14.000Z","comments":true,"path":"api/articles/first_unique_character_in_string.json","cover":"/img/leetcode.png","text":" 题目 给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1。 示例： s = \"leetcode\" 返回 0 s = \"loveleetcode\" 返回 2 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/p...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"},{"name":"哈希表","slug":"哈希表","count":3,"path":"api/tags/哈希表.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 344 反转字符串","uid":"781f960ea9b66678a41daf934b2a2a29","slug":"reverse_string","date":"2020-11-03T05:00:00.000Z","updated":"2020-12-08T10:29:30.000Z","comments":true,"path":"api/articles/reverse_string.json","cover":"/img/leetcode.png","text":" 题目 编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。 不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。 你可以假设数组中的所有字符都是 ASCII 码表中的可打印字符。 示例 1： ...","link":"","photos":[],"count_time":{"symbolsCount":686,"symbolsTime":"1 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"},{"name":"双指针","slug":"双指针","count":4,"path":"api/tags/双指针.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 434 字符串中的单词个数","uid":"b513457641c5d77aabc90d59ad7c2b99","slug":"num_of_segments_in_string","date":"2020-11-01T16:00:00.000Z","updated":"2020-12-08T10:29:16.000Z","comments":true,"path":"api/articles/num_of_segments_in_string.json","cover":"/img/leetcode.png","text":" 题目 You are given a string s , return the number of segments in the string. A segment is defined to be a contiguous sequence of non-space ch...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 14 最长公共前缀","uid":"d86afd4df1294e5c09b8411c6186d560","slug":"longest_common_prefix","date":"2020-11-01T16:00:00.000Z","updated":"2020-12-08T10:29:07.000Z","comments":true,"path":"api/articles/longest_common_prefix.json","cover":"/img/leetcode.png","text":" 题目 编写一个函数来查找字符串数组中的最长公共前缀。 如果不存在公共前缀，返回空字符串 &quot;&quot; 。 示例 1: 输入: [\"flower\",\"flow\",\"flight\"] 输出: \"fl\" 示例 2: 输入: [\"dog\",\"racecar\",\"car\"] ...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 520 检测大写字母","uid":"a9678d67ca5c601b58ad6876d5f2a753","slug":"check_capital_letter","date":"2020-10-31T16:00:00.000Z","updated":"2020-12-08T10:27:59.000Z","comments":true,"path":"api/articles/check_capital_letter.json","cover":"/img/leetcode.png","text":" 题目 给定一个单词，你需要判断单词的大写使用是否正确。 我们定义，在以下情况时，单词的大写用法是正确的： 全部字母都是大写，比如&quot;USA&quot;。 单词中所有字母都不是大写，比如&quot;leetcode&quot;。 如果单词不只含有一个字母，只有首字母大写，...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LC 125 验证回文串","uid":"1905b17da4d915d445f9b18f99561b69","slug":"is_palindrome","date":"2020-10-31T16:00:00.000Z","updated":"2020-12-08T10:28:57.000Z","comments":true,"path":"api/articles/is_palindrome.json","cover":"/img/leetcode.png","text":" 题目 给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。 说明：本题中，我们将空字符串定义为有效的回文串。 示例 1: 输入: \"A man, a plan, a canal: Panama\" 输出: true 示例 2: 输入: \"race a ...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"算法题解/笔记","slug":"算法题解-笔记","count":26,"path":"api/categories/算法题解-笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":21,"path":"api/tags/算法.json"},{"name":"题解","slug":"题解","count":16,"path":"api/tags/题解.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"归纳总结 | 指针","uid":"65abd3d32b27895ac3ec803fdc1b4589","slug":"pivot_and_array","date":"2020-10-30T16:00:00.000Z","updated":"2020-12-08T10:23:41.000Z","comments":true,"path":"api/articles/pivot_and_array.json","cover":null,"text":"本文介绍 C 语言中的指针和数组相关知识。 基础知识 变量 一个变量具有三项属性： 属性 解释 数据类型 (Element Type) 如 int ，char 地址 (Memory Address) 对于64位计算机来讲，一条内存地址值占8个字节 值 (Value) 变量的“内容...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"C/C++","slug":"C-C","count":2,"path":"api/categories/C-C.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":2,"path":"api/tags/C-C.json"},{"name":"指针","slug":"指针","count":1,"path":"api/tags/指针.json"},{"name":"笔记总结","slug":"笔记总结","count":1,"path":"api/tags/笔记总结.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Hexo + Gitee 部署个人博客","uid":"f4e7ecf8b446abc26f94ba3ad7edad20","slug":"hexo_plus_gitee","date":"2020-10-27T02:53:36.000Z","updated":"2021-03-25T13:08:18.000Z","comments":true,"path":"api/articles/hexo_plus_gitee.json","cover":"/img/hexo_plus_gitee/hexo_plus_gitee.png","text":"最近在尝试搭建个人博客，本来刚安装好WordPress，突然觉得这种动态的CMS有点过于臃肿，用来作个人博客的管理平台有点杀鸡用牛刀的意思. 后来在B站看了CodeSheep的介绍视频，决定尝试VuePress，但搭建好后又发现过于“静态”，缺少给文章打tag , categor...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":2,"path":"api/tags/前端.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"梦想的起点 | 深圳","uid":"ec0439b9fef997560e6463dca51af921","slug":"thought_at_szb","date":"2020-10-26T16:00:00.000Z","updated":"2021-03-25T05:29:00.000Z","comments":true,"path":"api/articles/thought_at_szb.json","cover":"/img/thought_at_szb/szb_blue.png","text":"谨以此文，开启深圳追梦之旅 题记 2018年冬，深圳北站。 孤身一人来到陌生的城市，少年抬起头，看着一抹暖阳洒在“深圳北”的站牌上，稚嫩的脸庞上，写满了懵懂、好奇、憧憬与希望。 2020年9月，深圳南山西丽大学城。 经过3年的磨炼，略显成熟的少年，在他青涩的18岁，紧握着手里的通...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"随笔","slug":"随笔","count":2,"path":"api/categories/随笔.json"}],"tags":[],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Anki×生物-记忆方法和经验分享","uid":"8ccb240acaf1eee2e5457b7879df4395","slug":"Anki_Biology","date":"2020-10-26T06:53:36.000Z","updated":"2020-12-08T10:26:33.000Z","comments":true,"path":"api/articles/Anki_Biology.json","cover":"/img/anki_banner2.png","text":" 主题概览 Anki的简要介绍 我是如何了解到Anki的 高三后期Anki的使用体验及效果 Anki给我带来的思考和启发 前言 说来惭愧。 笔者本来计划高考后的暑假集中精力写一系列文章来分享高考的应试经验和收获，当作是将自己三年的一些经验进行简单的总结和输出，能够分享出来供大家参...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"高考","slug":"高考","count":1,"path":"api/categories/高考.json"}],"tags":[{"name":"高考","slug":"高考","count":1,"path":"api/tags/高考.json"},{"name":"生物","slug":"生物","count":1,"path":"api/tags/生物.json"}],"author":{"name":"菲尔普斯","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/72149771?v=4","link":"/","description":"你曾经灼热的眼眶，是人生中少数的笨拙又可贵的时刻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}